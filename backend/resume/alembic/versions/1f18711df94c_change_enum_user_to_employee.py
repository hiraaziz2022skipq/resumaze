"""change enum user to employee

Revision ID: 1f18711df94c
Revises: cf02f42884c5
Create Date: 2024-08-16 12:36:34.002745

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '1f18711df94c'
down_revision: Union[str, None] = 'cf02f42884c5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE "user" ALTER COLUMN role TYPE VARCHAR')

    # Drop the existing enum type
    op.execute('DROP TYPE userrole')

    # Recreate the enum type without the "employee" value
    op.execute(
        "CREATE TYPE userrole AS ENUM('admin', 'recruiter','employee')"
    )

    # Change the column back to the new enum type
    op.execute(
        'ALTER TABLE "user" ALTER COLUMN role TYPE userrole USING role::text::userrole'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE "user" ALTER COLUMN role TYPE VARCHAR')

    # Drop the existing enum type
    op.execute('DROP TYPE userrole')

    # Recreate the original enum type with the "employee" value
    op.execute(
        "CREATE TYPE userrole AS ENUM('employee', 'admin', 'recruiter')"
    )

    # Change the column back to the original enum type
    op.execute(
        'ALTER TABLE "user" ALTER COLUMN role TYPE userrole USING role::text::userrole'
    )
    # ### end Alembic commands ###
